//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.1

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "unknown_final_fantasy_character")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    #[sea_orm(unique)]
    pub name: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl Related<super::world::Entity> for Entity {
    fn to() -> RelationDef {
        super::sale_history::Relation::World.def()
    }
    fn via() -> Option<RelationDef> {
        Some(
            super::sale_history::Relation::UnknownFinalFantasyCharacter
                .def()
                .rev(),
        )
    }
}

impl ActiveModelBehavior for ActiveModel {}
